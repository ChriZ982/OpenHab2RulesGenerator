rule "Mail Heizung Batterie leer"
when
	Item Heizung_OG_Bad_0_LowBattery received update ON or
	Item Heizung_EG_Wohnzimmer_0_LowBattery received update ON or
	Item Heizung_EG_ArbeitszimmerRZ_0_LowBattery received update ON or
	Item Heizung_OG_KinderzimmerCZ_0_LowBattery received update ON or
	Item Heizung_EG_Kueche_0_LowBattery received update ON
then
	sendMail("racraz@unitybox.de", "OpenHab - Heizung Batterie fast leer", "Eine Batterie ist fast leer.\n\nStatus:\nHeizung EG Kueche: "+Heizung_EG_Kueche_0_LowBattery.state.toString+"\nHeizung EG ArbeitszimmerRZ: "+Heizung_EG_ArbeitszimmerRZ_0_LowBattery.state.toString+"\nHeizung EG Wohnzimmer: "+Heizung_EG_Wohnzimmer_0_LowBattery.state.toString+"\nHeizung OG KinderzimmerCZ: "+Heizung_OG_KinderzimmerCZ_0_LowBattery.state.toString+"\nHeizung OG Bad: "+Heizung_OG_Bad_0_LowBattery.state.toString+"\n")
end

rule "Mail Heizung Fehlermeldung"
when
	Item Heizung_EG_Kueche_4_FaultReporting changed or
	Item Heizung_OG_Bad_4_FaultReporting changed or
	Item Heizung_EG_ArbeitszimmerRZ_4_FaultReporting changed or
	Item Heizung_EG_Wohnzimmer_4_FaultReporting changed or
	Item Heizung_OG_KinderzimmerCZ_4_FaultReporting changed
then
	sendMail("racraz@unitybox.de", "OpenHab - Heizung hat eine Fehlermeldung", "Eine Heizung hat eine Fehlermeldung.\n\nStatus:\nHeizung EG Kueche: "+Heizung_EG_Kueche_4_FaultReporting.state.toString+"\nHeizung EG ArbeitszimmerRZ: "+Heizung_EG_ArbeitszimmerRZ_4_FaultReporting.state.toString+"\nHeizung EG Wohnzimmer: "+Heizung_EG_Wohnzimmer_4_FaultReporting.state.toString+"\nHeizung OG KinderzimmerCZ: "+Heizung_OG_KinderzimmerCZ_4_FaultReporting.state.toString+"\nHeizung OG Bad: "+Heizung_OG_Bad_4_FaultReporting.state.toString+"\n")
end

rule "Mail Rauchmelder Batterie leer"
when
	Item Rauchmelder_OG_KinderzimmerCZ_0_LowBattery received update ON or
	Item Rauchmelder_OG_KinderzimmerRAZ_0_LowBattery received update ON or
	Item Rauchmelder_OG_Flur_0_LowBattery received update ON or
	Item Rauchmelder_UG_Flur_0_LowBattery received update ON or
	Item Rauchmelder_EG_Flur_0_LowBattery received update ON
then
	sendMail("racraz@unitybox.de", "OpenHab - Rauchmelder Batterie fast leer", "Eine Batterie ist fast leer.\n\nStatus:\nRauchmelder UG Flur: "+Rauchmelder_UG_Flur_0_LowBattery.state.toString+"\nRauchmelder EG Flur: "+Rauchmelder_EG_Flur_0_LowBattery.state.toString+"\nRauchmelder OG KinderzimmerCZ: "+Rauchmelder_OG_KinderzimmerCZ_0_LowBattery.state.toString+"\nRauchmelder OG KinderzimmerRAZ: "+Rauchmelder_OG_KinderzimmerRAZ_0_LowBattery.state.toString+"\nRauchmelder OG Flur: "+Rauchmelder_OG_Flur_0_LowBattery.state.toString+"\n")
end

rule "Group Channel astrosun68b99d43civilDuskevent triggered END"
when
	Channel "astro:sun:68b99d43:civilDusk#event" triggered END	
then
	if (Automatik_Licht_ein.state==ON) {
		sendCommand(Licht_EG_Wohnzimmer_1_Level, 10)
	}
	if (Automatik_Rolladen_runter.state==ON) {
		sendCommand(Rolladen1_EG_Wohnzimmer_1_Level, DOWN)
		Thread::sleep(2000)
		sendCommand(Rolladen2_EG_Wohnzimmer_1_Level, DOWN)
		Thread::sleep(2000)
		sendCommand(Rolladen3_EG_Wohnzimmer_1_Level, DOWN)
	}
end

rule "LICHT_EIN_HARDWARE Licht2_EG_Wohnzimmer_1_State Licht_EG_Wohnzimmer_1_Level"
when
	Item Licht_EG_Wohnzimmer_1_Level changed from 0
then
	sendCommand(Licht2_EG_Wohnzimmer_1_State, ON)
end

rule "LICHT_AUS_HARDWARE Licht2_EG_Wohnzimmer_1_State Licht_EG_Wohnzimmer_1_Level"
when
	Item Licht_EG_Wohnzimmer_1_Level changed to 0
then
	sendCommand(Licht2_EG_Wohnzimmer_1_State, OFF)
end

rule "Group Time cron 0 0 18 MON-SUN"
when
	Time cron "0 0 18 ? * MON-SUN"
then
	if (Automatik_Heizung_ein_Feiertag.state==ON) {
		sendCommand(Heizung_EG_Wohnzimmer_4_SetTemperature, 21)
	}
	if (Automatik_Heizung_ein_Normaltag.state==ON) {
		sendCommand(Heizung_EG_Wohnzimmer_4_SetTemperature, 21)
	}
end

rule "Group Time cron 0 0 22 MON-FRI"
when
	Time cron "0 0 22 ? * MON-FRI"
then
	if (Automatik_Heizung_aus_Normaltag.state==ON) {
		sendCommand(Heizung_EG_Wohnzimmer_4_SetTemperature, 5)
		Thread::sleep(2000)
		sendCommand(Heizung_OG_KinderzimmerCZ_4_SetTemperature, 5)
	}
end

rule "Group Time cron 0 0 23 SAT,SUN"
when
	Time cron "0 0 23 ? * SAT,SUN"
then
	if (Automatik_Heizung_aus_Normaltag.state==ON) {
		sendCommand(Heizung_EG_Wohnzimmer_4_SetTemperature, 5)
		Thread::sleep(2000)
		sendCommand(Heizung_OG_KinderzimmerCZ_4_SetTemperature, 5)
	}
end

rule "Group Time cron 0 0 23 MON-SUN"
when
	Time cron "0 0 23 ? * MON-SUN"
then
	if (Automatik_Heizung_aus_Feiertag.state==ON) {
		sendCommand(Heizung_EG_Wohnzimmer_4_SetTemperature, 5)
		Thread::sleep(2000)
		sendCommand(Heizung_OG_KinderzimmerCZ_4_SetTemperature, 5)
	}
end

rule "HEIZUNG_EIN Heizung_EG_Kueche_4_SetTemperature 30 5 Normaltag MON-FRI"
when
	Time cron "0 30 5 ? * MON-FRI"
then
	if (Automatik_Heizung_ein_Normaltag.state==ON) {
		sendCommand(Heizung_EG_Kueche_4_SetTemperature, 21)
	}
end

rule "Group Time cron 0 0 8 MON-SUN"
when
	Time cron "0 0 8 ? * MON-SUN"
then
	if (Automatik_Heizung_ein_Feiertag.state==ON) {
		sendCommand(Heizung_EG_Kueche_4_SetTemperature, 21)
		Thread::sleep(2000)
		sendCommand(Heizung_OG_Bad_4_SetTemperature, 21)
	}
end

rule "HEIZUNG_EIN Heizung_EG_Kueche_4_SetTemperature 40 17 Normaltag MON-FRI"
when
	Time cron "0 40 17 ? * MON-FRI"
then
	if (Automatik_Heizung_ein_Normaltag.state==ON) {
		sendCommand(Heizung_EG_Kueche_4_SetTemperature, 21)
	}
end

rule "HEIZUNG_EIN Heizung_EG_Kueche_4_SetTemperature 40 17 Feiertag MON-SUN"
when
	Time cron "0 40 17 ? * MON-SUN"
then
	if (Automatik_Heizung_ein_Feiertag.state==ON) {
		sendCommand(Heizung_EG_Kueche_4_SetTemperature, 21)
	}
end

rule "Group Time cron 0 0 8 SAT,SUN"
when
	Time cron "0 0 8 ? * SAT,SUN"
then
	if (Automatik_Heizung_ein_Normaltag.state==ON) {
		sendCommand(Heizung_EG_Kueche_4_SetTemperature, 21)
		Thread::sleep(2000)
		sendCommand(Heizung_OG_Bad_4_SetTemperature, 21)
	}
end

rule "HEIZUNG_AUS Heizung_EG_Kueche_4_SetTemperature 30 8 Normaltag MON-FRI"
when
	Time cron "0 30 8 ? * MON-FRI"
then
	if (Automatik_Heizung_aus_Normaltag.state==ON) {
		sendCommand(Heizung_EG_Kueche_4_SetTemperature, 5)
	}
end

rule "HEIZUNG_AUS Heizung_EG_Kueche_4_SetTemperature 15 18 Normaltag MON-FRI"
when
	Time cron "0 15 18 ? * MON-FRI"
then
	if (Automatik_Heizung_aus_Normaltag.state==ON) {
		sendCommand(Heizung_EG_Kueche_4_SetTemperature, 5)
	}
end

rule "HEIZUNG_AUS Heizung_EG_Kueche_4_SetTemperature 15 18 Feiertag MON-SUN"
when
	Time cron "0 15 18 ? * MON-SUN"
then
	if (Automatik_Heizung_aus_Feiertag.state==ON) {
		sendCommand(Heizung_EG_Kueche_4_SetTemperature, 5)
	}
end

rule "Group Time cron 0 0 1 MON-SUN"
when
	Time cron "0 0 1 ? * MON-SUN"
then
	if (Automatik_Heizung_aus_Feiertag.state==ON) {
		sendCommand(Heizung_OG_KinderzimmerCZ_4_SetTemperature, 5)
	}
	if (Automatik_Heizung_aus_Normaltag.state==ON) {
		sendCommand(Heizung_OG_KinderzimmerCZ_4_SetTemperature, 5)
	}
end

rule "Group Time cron 0 0 3 MON-SUN"
when
	Time cron "0 0 3 ? * MON-SUN"
then
	if (Automatik_Heizung_aus_Feiertag.state==ON) {
		sendCommand(Heizung_OG_KinderzimmerCZ_4_SetTemperature, 5)
	}
	if (Automatik_Heizung_aus_Normaltag.state==ON) {
		sendCommand(Heizung_OG_KinderzimmerCZ_4_SetTemperature, 5)
	}
end

rule "HEIZUNG_EIN Heizung_OG_Bad_4_SetTemperature 0 6 Normaltag MON-FRI"
when
	Time cron "0 0 6 ? * MON-FRI"
then
	if (Automatik_Heizung_ein_Normaltag.state==ON) {
		sendCommand(Heizung_OG_Bad_4_SetTemperature, 21)
	}
end

rule "HEIZUNG_AUS Heizung_OG_Bad_4_SetTemperature 0 8 Normaltag MON-FRI"
when
	Time cron "0 0 8 ? * MON-FRI"
then
	if (Automatik_Heizung_aus_Normaltag.state==ON) {
		sendCommand(Heizung_OG_Bad_4_SetTemperature, 5)
	}
end

rule "Group Time cron 0 30 9 MON-FRI"
when
	Time cron "0 30 9 ? * MON-FRI"
then
	if (Automatik_Rolladen_rauf.state==ON) {
		sendCommand(Rolladen1_EG_Wohnzimmer_1_Level, UP)
		Thread::sleep(2000)
		sendCommand(Rolladen2_EG_Wohnzimmer_1_Level, UP)
		Thread::sleep(2000)
		sendCommand(Rolladen3_EG_Wohnzimmer_1_Level, UP)
	}
	if (Automatik_Rolladen_ritze.state==ON) {
		if(Rolladen1_EG_Wohnzimmer_1_Level.state > 95) {
			sendCommand(Rolladen1_EG_Wohnzimmer_1_Level, 90)
		}
		Thread::sleep(2000)
		if(Rolladen2_EG_Wohnzimmer_1_Level.state > 95) {
			sendCommand(Rolladen2_EG_Wohnzimmer_1_Level, 90)
		}
		Thread::sleep(2000)
		if(Rolladen3_EG_Wohnzimmer_1_Level.state > 95) {
			sendCommand(Rolladen3_EG_Wohnzimmer_1_Level, 90)
		}
	}
end

rule "Group Time cron 0 0 10 SAT,SUN"
when
	Time cron "0 0 10 ? * SAT,SUN"
then
	if (Automatik_Rolladen_rauf.state==ON) {
		sendCommand(Rolladen1_EG_Wohnzimmer_1_Level, UP)
		Thread::sleep(2000)
		sendCommand(Rolladen2_EG_Wohnzimmer_1_Level, UP)
		Thread::sleep(2000)
		sendCommand(Rolladen3_EG_Wohnzimmer_1_Level, UP)
	}
	if (Automatik_Rolladen_ritze.state==ON) {
		if(Rolladen1_EG_Wohnzimmer_1_Level.state > 95) {
			sendCommand(Rolladen1_EG_Wohnzimmer_1_Level, 90)
		}
		Thread::sleep(2000)
		if(Rolladen2_EG_Wohnzimmer_1_Level.state > 95) {
			sendCommand(Rolladen2_EG_Wohnzimmer_1_Level, 90)
		}
		Thread::sleep(2000)
		if(Rolladen3_EG_Wohnzimmer_1_Level.state > 95) {
			sendCommand(Rolladen3_EG_Wohnzimmer_1_Level, 90)
		}
	}
end

rule "ROLLADEN_RAUF Rolladen_OG_KinderzimmerCZ_1_Level 40 9 MON-FRI"
when
	Time cron "0 40 9 ? * MON-FRI"
then
	if (Automatik_Rolladen_rauf.state==ON) {
		sendCommand(Rolladen_OG_KinderzimmerCZ_1_Level, UP)
	}
end

rule "Group Time cron 0 0 11 SAT,SUN"
when
	Time cron "0 0 11 ? * SAT,SUN"
then
	if (Automatik_Rolladen_rauf.state==ON) {
		sendCommand(Rolladen_OG_KinderzimmerCZ_1_Level, UP)
	}
	if (Automatik_Rolladen_ritze.state==ON) {
		if(Rolladen_OG_KinderzimmerCZ_1_Level.state > 95) {
			sendCommand(Rolladen_OG_KinderzimmerCZ_1_Level, 95)
		}
	}
end

rule "ROLLADEN_RITZE Rolladen_OG_KinderzimmerCZ_1_Level 30 10 MON-FRI 95"
when
	Time cron "0 30 10 ? * MON-FRI"
then
	if (Automatik_Rolladen_ritze.state==ON) {
		if(Rolladen_OG_KinderzimmerCZ_1_Level.state > 95) {
			sendCommand(Rolladen_OG_KinderzimmerCZ_1_Level, 95)
		}
	}
end

